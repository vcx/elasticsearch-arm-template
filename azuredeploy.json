{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "version": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "desciprtion": "The string suffix representing deployment version. Used for the dns-based resources to avoid conflicts."
      }
    },

    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username used for provisioned virtual machines"
      }
    },

    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin SSH key used when provisioned virtual machines"
      }
    },

    "location": {
      "type": "string",
      "defaultValue": "East US",
      "allowedValues": [
        "West US",
        "East US",
        "East Asia",
        "Southeast Asia",
        "West Europe",
        "East US 2"
      ],
      "metadata": {
        "description": "Location where resources will be provisioned"
      }
    },

    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D2",
      "metadata": {
        "description": "The size of the virtual machine instance"
      }
    },

    "elasticsearchClusterDnsName": {
      "type": "string",
      "defaultValue": "telemetry",
      "metadata": {
        "description": "The DNS prefix that will be used for the public facing IP address"
      }
    }
  },

  "variables": {
    "storageAccountName": "[concat('esvmstorage', parameters('version'))]",
    "elasticsearchPublicIpName": "[concat('es-public-ip', '-', parameters('version'))]",
    "virtualNetworkName": "[concat('es-vnet', '-', parameters('version'))]",
    "virtualMachineNicName": "[concat('es-vm-nic', '-', parameters('version'))]",
    "virtualMachineName": "[concat('es-vm', '-', parameters('version'))]",
    "networkSecurityGroupName": "[concat('es-nsg', '-', parameters('version'))]",

    "templateBaseUrl": "https://raw.githubusercontent.com/moorandrew/elasticsearch-arm-template/master/",

    "virtualNetworkSettings": {
      "addressPrefix": "10.0.0.0/16",
      "subnets": {
        "default": {
          "name": "default",
          "prefix": "10.0.0.0/24"
        }
      }
    },

    "elasticsearchSettings": {
      "clusterName": "elasticsearch",
      "clusterVersion": "1.7.2",
      "clusterDnsName": "[concat(parameters('elasticsearchClusterDnsName'), parameters('version'))]"
    },

    "osSettings": {
      "computerName": "telemetryvm",
      "imageReference": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "14.04.2-LTS",
        "version": "latest"
      },
      "managementPort": "22",
      "dataDiskCount": 2,
      "dataDiskSize": 1023
    },

    "osExtensionSettings": {
      "scripts": [
        "[concat(variables('templateBaseUrl'), 'elasticsearch-ubuntu-install.sh')]",
        "[concat(variables('templateBaseUrl'), 'vm-disk-utils-0.1.sh')]"
      ]
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('elasticsearchPublicIpName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('elasticsearchSettings').clusterDnsName]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('virtualNetworkSettings').addressPrefix]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('virtualNetworkSettings').subnets.default.name]",
            "properties": {
              "addressPrefix": "[variables('virtualNetworkSettings').subnets.default.prefix]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "Allows SSH traffic",
              "protocol": "Tcp",
              "sourcePortRange": "22",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Kibana",
            "properties": {
              "description": "Allows Kibana connection",
              "protocol": "Tcp",
              "sourcePortRange": "5601",
              "destinationPortRange": "5601",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          },
          {
            "name": "Elasticsearch",
            "properties": {
              "description": "Allows Elasticsearch connection",
              "protocol": "Tcp",
              "sourcePortRange": "9200",
              "destinationPortRange": "9200",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('virtualMachineNicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('elasticsearchPublicIpName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('elasticsearchPublicIpName'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')), '/subnets/', variables('virtualNetworkSettings').subnets.default.name)]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('virtualMachineName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('virtualMachineNicName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[variables('osSettings').computerName]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[variables('osSettings').imageReference]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('virtualMachineName'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "[variables('osSettings').dataDiskSize]",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/', 'vhd/', variables('virtualMachineName'), '-dataDisk1.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk2",
              "diskSizeGB": "[variables('osSettings').dataDiskSize]",
              "lun": 1,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/', 'vhd/', variables('virtualMachineName'), '-dataDisk2.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('virtualMachineNicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('virtualMachineName'), '/installelasticsearch')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "settings": {
          "fileUris": "[variables('osExtensionSettings').scripts]",
          "commandToExecute": "[concat('bash elasticsearch-ubuntu-install.sh -n ', variables('elasticsearchSettings').clusterName, ' -v ', variables('elasticsearchSettings').clusterVersion, ' -d ', '127.0.0.1')]"
        }
      }
    }
  ],
  "outputs": {
    "kibana-url": {
      "type": "string",
      "value": "[concat(reference(variables('elasticsearchPublicIpName')).dnsSettings.fqdn, ':', '5601')]"
    },
    "elasticsearch-url": {
      "type": "string",
      "value": "[concat(reference(variables('elasticsearchPublicIpName')).dnsSettings.fqdn, ':', '9200')]"
    },
    "marvel-url": {
      "type": "string",
      "value": "[concat(reference(variables('elasticsearchPublicIpName')).dnsSettings.fqdn, ':', '9200', '/_plugin/marvel')]"
    }
  }
}